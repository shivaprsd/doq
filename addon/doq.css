/* Viewer customizations */
:root {
  --reader-bg: #F8F1E3;
  --filter-css: invert(86%) hue-rotate(180deg);
}
.reader .pdfViewer .page, .reader .thumbnailImage {
  background-color: var(--reader-bg) !important;
}
.reader .freeTextEditor > .internal {
  --free-text-color: #000000;
  color: var(--free-text-color) !important;
}
.reader.dark .canvasWrapper > .highlight:not(.free) {
  --blend-mode: overlay;
}
.reader.dark .canvasWrapper > .highlight.free {
  --blend-mode: hard-light;
}
.reader.dark .textLayer .highlight {
  --highlight-backdrop-filter: invert() hue-rotate(180deg);
  --highlight-selected-backdrop-filter: invert() hue-rotate(180deg);
  display: inline-block;    /* needed for WebKit/Blink */
}
.filter :is(.page, .thumbnailImage), .colorSwatch.filter {
  filter: var(--filter-css);
}

/* Widgets */
.colorSwatch {
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  box-sizing: border-box;
  height: 26px;
  width: 26px;
  border-radius: 50%;
  border: 0.5px solid var(--field-border-color);
  background-color: #ffffff;
  color: #000000;
  margin: 4px;
  cursor: pointer;
}
.maskIcon {
  display: block;
  width: 20px;
  height: 20px;
  text-align: center;
  color: var(--main-color);
  opacity: var(--toolbar-icon-opacity);
  cursor: pointer;
}

.maskIcon::before, :checked + .colorSwatch::before {
  display: inline-block;
  content: "";
  width: 16px;
  height: 16px;
  margin-top: 4px;
  vertical-align: top;
  background-color: currentcolor;
  -webkit-mask-size: cover;
  mask-size: cover;
}
.maskIcon::before {
  margin-top: 2px;
}

/* Toolbar layout */
#readerToolbar {
  width: max-content;
  font-size: 0;
  background-color: var(--toolbar-bg-color);
  -webkit-user-select: none;
  user-select: none;
}
#readerToolbar::after {
  border-bottom-color: var(--toolbar-bg-color);
}
#readerToolbar > div {
  padding: 6px;
}

/* Panel layouts */
.mainPanel {
  max-width: 170px;
  padding-bottom: 4px;
}
.mainPanel > :first-child {
  margin-bottom: 6px;
}
.mainPanel > :last-child {
  display: flex;
  align-items: center;
  padding-left: 4px;
  padding-right: 2px;
}
.optionsPanel {
  padding: 0 4px;
  height: 74px;
  overflow-y: hidden;
  transition-property: height, opacity, visibility;
  transition-duration: var(--sidebar-transition-duration);
}
.optionsPanel.collapsed {
  height: 0;
  opacity: 0;
  visibility: hidden;
}
.optionsPanel > div {
  display: block;
  position: relative;
}
.optionsPanel > :first-child {
  margin-top: 8px;
}
.optionsPanel > :last-child {
  margin-top: 6px;
  margin-bottom: 4px;
}

/* Main panel */
#tonePicker {
  position: relative;
  text-align: center;
}
#schemeSelectContainer {
  position: relative;
  min-width: 94px;
  width: auto;
  flex-grow: 1;
  margin: 0 !important;
}
#schemeSelect {
  width: 100%;
}
#optionsToggleContainer {
  --button-hover-color: transparent;
  --toggled-btn-bg-color: transparent;
  position: relative;
  flex-shrink: 0;
  margin-inline-start: 8px;
}
#optionsToggle {
  margin: 3px;
}
#optionsToggleContainer .maskIcon {
  transition-property: transform;
  transition-duration: var(--sidebar-transition-duration);
}
#optionsToggle:checked + div > .maskIcon {
  transform: rotate(-22.5deg);
}
/* Options Panel */
.optionsPanel .toolbarLabel {
  display: flex;
  width: 100%;
  padding: 7px;
}
.optionsPanel .toggleButton {
  border-radius: 2px;
}

/* Icons */
#viewReader.toolbarButton::before {
  -webkit-mask-image: url(images/readerIcon.svg);
  mask-image: url(images/readerIcon.svg);
}
#tonePicker > :checked + .colorSwatch::before {
  -webkit-mask-image: url(images/checkMark.svg);
  mask-image: url(images/checkMark.svg);
}
#optionsToggleContainer .maskIcon::before {
  -webkit-mask-image: url(images/optionsIcon.svg);
  mask-image: url(images/optionsIcon.svg);
}

/* Form controls */
#readerToolbar input[type="radio"] {
  margin: 10px 0 3px 7px;
  position: absolute !important;
  top: 0;
  opacity: 0;
  pointer-events: none;
}
#readerToolbar input[type="checkbox"] {
  pointer-events: none;
}

/* Accessibility */
.tabMode #schemeSelectContainer:focus-within,
#readerToolbar input:focus-visible + :is(label, div) {
  outline: 5px auto;
}

/* For PDF.js legacy (< 4.7) versions */
.pdfjsLegacy#viewReader::before {
  top: unset;
}
.pdfjsLegacy .editorParamsToolbarContainer {
  width: max-content;
}
.pdfjsLegacy input[type="checkbox"] {
  position: absolute;
  opacity: 0;
}
.pdfjsLegacy .toolbarLabel {
  box-sizing: border-box;
  justify-content: center;
}
.pdfjsLegacy :is(.toolbarLabel:hover, :focus-visible + label) {
  background-color: var(--button-hover-color);
}
.pdfjsLegacy :checked + .toolbarLabel {
  background-color: var(--toggled-btn-bg-color);
}
